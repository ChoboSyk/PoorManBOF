[
  {
    "n_arguments": 4,
    "description": "Creates a mailslot with the specified name and returns  a handle that a mailslot server can use to perform operations on the mailslot. The mailslot is local to the computer that creates it. An error occurs if a mailslot with the specified name already exists.",
    "library": "Kernel32.lib",
    "min_server": "Windows 2000 Server [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is a handle to the mailslot, for use in server mailslot operations.  The handle returned by this function is asynchronous, or overlapped. If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call  GetLastError. ",
    "remarks": "The mailslot exists until one of the following conditions is true: The system uses the second method to destroy mailslots. To write a message to a mailslot, a process uses the  CreateFile function, specifying the mailslot name by using one of the following formats.  If CreateFile specifies a domain or uses the asterisk format to specify the system's primary domain, the application cannot write more than 424 bytes at a time to the mailslot. If the application attempts to do so, the WriteFile function fails and  GetLastError returns ERROR_BAD_NETPATH. An application must specify the FILE_SHARE_READ flag when using CreateFile to retrieve a client handle to a mailslot. If CreateFile is called to access a non-existent mailslot, the  ERROR_FILE_NOT_FOUND error code will be set. For an example, see  Creating a Mailslot. ",
    "return_type": "HANDLE",
    "category": "Mailslots",
    "name": "CreateMailslot",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPCTSTR",
        "name": "lpName",
        "description": "The name of the mailslot. This name must have the following form: \\\\.\\mailslot\\[path]name The name field must be unique. The name may include multiple levels of pseudo directories separated by backslashes. For example, both \\\\.\\mailslot\\example_mailslot_name and \\\\.\\mailslot\\abc\\def\\ghi are valid names."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "nMaxMessageSize",
        "description": "The maximum size of a single message that can be written to the mailslot, in bytes. To specify that the message can be of any size, set this value to zero."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "lReadTimeout",
        "description": "The time a read operation can wait for a message to be written to the mailslot before a time-out occurs, in milliseconds. The following values have special meanings.  ValueMeaning   0   Returns immediately if no message is present. (The system does not treat an immediate return as an error.)   MAILSLOT_WAIT_FOREVER ((DWORD)-1)   Waits forever for a message.     This time-out value applies to all subsequent read operations and all inherited mailslot handles."
      },
      {
        "in_out": "_In_opt_",
        "type": "LPSECURITY_ATTRIBUTES",
        "name": "lpSecurityAttributes",
        "description": "A pointer to a  SECURITY_ATTRIBUTES structure. The bInheritHandle member of the structure determines whether the returned handle can be inherited by child processes. If lpSecurityAttributes is NULL, the handle cannot be inherited."
      }
    ],
    "min_client": "Windows 2000 Professional [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Retrieves information about the specified mailslot.",
    "library": "Kernel32.lib",
    "min_server": "Windows 2000 Server [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. For an example, see  Reading from a Mailslot. ",
    "remarks": "",
    "return_type": "BOOL",
    "category": "Mailslots",
    "name": "GetMailslotInfo",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hMailslot",
        "description": "A handle to a mailslot. The  CreateMailslot function must create this handle."
      },
      {
        "in_out": "_Out_opt_",
        "type": "LPDWORD",
        "name": "lpMaxMessageSize",
        "description": "The maximum message size, in bytes, allowed for this mailslot. This value can be greater than or equal to the value specified in the cbMaxMsg parameter of the  CreateMailslot function that created the mailslot. This parameter can be NULL."
      },
      {
        "in_out": "_Out_opt_",
        "type": "LPDWORD",
        "name": "lpNextSize",
        "description": "The size of the next message, in bytes. The following value has special meaning.  ValueMeaning  MAILSLOT_NO_MESSAGE ((DWORD)-1)   There is no next message.     This parameter can be NULL."
      },
      {
        "in_out": "_Out_opt_",
        "type": "LPDWORD",
        "name": "lpMessageCount",
        "description": "The total number of messages waiting to be read, when the function returns. This parameter can be NULL."
      },
      {
        "in_out": "_Out_opt_",
        "type": "LPDWORD",
        "name": "lpReadTimeout",
        "description": "The amount of time, in milliseconds, a read operation can wait for a message to be written to the mailslot before a time-out occurs. This parameter is filled in when the function returns. This parameter can be NULL."
      }
    ],
    "min_client": "Windows 2000 Professional [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Sets the time-out value used by the specified mailslot for a read operation.",
    "library": "Kernel32.lib",
    "min_server": "Windows 2000 Server [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "The initial time-out value used by a mailslot for a read operation is typically set by  CreateMailslot when the mailslot is created. ",
    "return_type": "BOOL",
    "category": "Mailslots",
    "name": "SetMailslotInfo",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hMailslot",
        "description": "A handle to a mailslot. The  CreateMailslot function must create this handle."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "lReadTimeout",
        "description": "The time a read operation can wait for a message to be written to the mailslot before a time-out occurs, in milliseconds. The following values have special meanings.  ValueMeaning   0   Returns immediately if no message is present. (The system does not treat an immediate return as an error.)   MAILSLOT_WAIT_FOREVER ((DWORD)-1)   Waits forever for a message.     This time-out value applies to all subsequent read operations and to all inherited mailslot handles."
      }
    ],
    "min_client": "Windows 2000 Professional [desktop apps only]"
  }
]