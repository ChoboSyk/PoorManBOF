[
  {
    "n_arguments": 6,
    "description": "Creates a secure connection to a WebDAV server or to a remote file or directory on a WebDAV server.",
    "library": "Netapi32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code. ",
    "remarks": "To close the connection, use the DavDeleteConnection function. Use this function when you are connecting to a WebDAV server using the Secure Sockets Layer (SSL) protocol and therefore must specify a certificate. To connect to a WebDAV server without specifying a certificate, use a Windows networking function such as WNetAddConnection2 or WNetAddConnection3. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavAddConnection",
    "is_callback": 0,
    "dll": "Netapi32.dll",
    "arguments": [
      {
        "in_out": "_Inout_",
        "type": "HANDLE*",
        "name": "ConnectionHandle",
        "description": "A pointer to a variable that receives the connection handle."
      },
      {
        "in_out": "_In_",
        "type": "LPCWSTR",
        "name": "RemoteName",
        "description": "A pointer to a null-terminated Unicode string that contains the path to the remote file or directory. This string must begin with the \"https://\" prefix."
      },
      {
        "in_out": "_In_opt_",
        "type": "LPCWSTR",
        "name": "UserName",
        "description": "A pointer to a null-terminated Unicode string that contains the user name to be used for the connection. This parameter is optional and can be NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "LPCWSTR",
        "name": "Password",
        "description": "A pointer to a null-terminated Unicode string that contains the password to be used for the connection. This parameter is optional and can be NULL."
      },
      {
        "in_out": "_In_",
        "type": "PBYTE",
        "name": "ClientCert",
        "description": "A pointer to a buffer that contains the client certificate to be used for the connection. The certificate must be in a serialized form."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "CertSize",
        "description": "Size, in bytes, of the client certificate."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 7,
    "description": "The WebDAV client calls the application-defined DavAuthCallback callback function to prompt the user for credentials.",
    "library": "",
    "min_server": "Windows Server 2008 with SP2 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code. ",
    "remarks": "The DavAuthCallback callback function must be registered by calling the DavRegisterAuthCallback function. To unregister this callback function, use the DavUnregisterAuthCallback function. This callback function should prompt the user for credentials (either a user name and password or an authentication BLOB) and store this information in the appropriate member of the DAV_CALLBACK_CRED structure that the pCallbackCred parameter points to. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavAuthCallback",
    "is_callback": 1,
    "dll": "",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPWSTR",
        "name": "lpwzServerName",
        "description": "A pointer to a NULL-terminated Unicode string that contains the name of the target server."
      },
      {
        "in_out": "_In_",
        "type": "LPWSTR",
        "name": "lpwzRemoteName",
        "description": "A pointer to a NULL-terminated Unicode string that contains the name of the network resource."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "dwAuthScheme",
        "description": "A bitmask of flags that specify the authentication schemes to be used.  ValueMeaning  DAV_AUTHN_SCHEME_BASIC 0x00000001   Basic authentication is to be used.   DAV_AUTHN_SCHEME_NTLM 0x00000002    Microsoft NTLM authentication is to be used.   DAV_AUTHN_SCHEME_PASSPORT 0x00000004    Passport authentication is to be used.   DAV_AUTHN_SCHEME_DIGEST 0x00000008    Microsoft Digest authentication is to be used.   DAV_AUTHN_SCHEME_NEGOTIATE 0x00000010    Microsoft Negotiate is to be used.   DAV_AUTHN_SCHEME_CERT 0x00010000   Certificate authentication is to be used.   DAV_AUTHN_SCHEME_FBA 0x00100000   Forms-based authentication is to be used."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "dwFlags",
        "description": "The flags that the WebDAV service passed in the dwFlags parameter when it called the NPAddConnection3 function."
      },
      {
        "in_out": "_Inout_",
        "type": "PDAV_CALLBACK_CRED",
        "name": "pCallbackCred",
        "description": "A pointer to a DAV_CALLBACK_CRED structure."
      },
      {
        "in_out": "_Inout_",
        "type": "AUTHNEXTSTEP*",
        "name": "NextStep",
        "description": "A pointer to an  AUTHNEXTSTEP enumeration value that specifies the next action that the WebDAV client should take after  a successful call to the DavAuthCallback callback function."
      },
      {
        "in_out": "_Out_",
        "type": "PFNDAVAUTHCALLBACK_FREECRED*",
        "name": "pFreeCred",
        "description": "A pointer to a DavFreeCredCallback callback function."
      }
    ],
    "min_client": "Windows Vista with SP2 [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Closes all connections to a WebDAV server or a remote file or directory on a WebDAV server.",
    "library": "Davclnt.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code or network error code such as one of the following values.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavCancelConnectionsToServer",
    "is_callback": 0,
    "dll": "Davclnt.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPWSTR",
        "name": "lpName",
        "description": "Pointer to a null-terminated Unicode string that contains the name of the remote file or server. This string must be in one of the following formats:  http://server/path \\\\server\\path server  where server is the name of a WebDAV server, and path is the path to a remote file or directory on the server."
      },
      {
        "in_out": "",
        "type": "BOOL",
        "name": "fForce",
        "description": "A Boolean value that specifies whether the connection should be closed if there are open files. Set this parameter to FALSE if the connection should be closed only if there are no open files. Set this parameter to TRUE if the connection should be closed even if there are open files."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Closes a connection that was created by using the DavAddConnection function.",
    "library": "Netapi32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavDeleteConnection",
    "is_callback": 0,
    "dll": "Netapi32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "ConnectionHandle",
        "description": "A handle to an open connection that was  created by using the  DavAddConnection function."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Flushes the data from the local version of a remote file to the WebDAV server.",
    "library": "Netapi32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds,  or if hFile is a handle to an encrypted file, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code. ",
    "remarks": "When an application creates or opens a remote file on a WebDAV server, the WebDAV service downloads the file to the local computer, and the application receives a handle to the open file on the server. Any changes that the application makes to the local file have no effect on the remote file until the file handle is closed  and the local version of the file is uploaded to the server. Because the file handle is closed at the same time that the file is saved to the server, the application cannot check whether the file was saved successfully. To  avoid this problem, use the  DavFlushFile function to flush the data from the local version of the file to the remote file on the WebDAV server. If the function succeeds, this means that the file was saved successfully. This function does not flush encrypted files. If hFile is a handle to an encrypted file, DavFlushFile returns ERROR_SUCCESS without flushing the file data. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavFlushFile",
    "is_callback": 0,
    "dll": "Netapi32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hFile",
        "description": "A handle to an open file on a WebDAV server. The file handle must have the GENERIC_WRITE access right. For more information, see  File Security and Access Rights."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "The WebDAV client calls the application-defined DavFreeCredCallback callback function to free the credential information that was retrieved by the DavAuthCallback callback function.",
    "library": "",
    "min_server": "Windows Server 2008 with SP2 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code. ",
    "remarks": "The DavFreeCredCallback callback function must be registered by calling the DavRegisterAuthCallback function. This callback function should free only the buffer that the pBuffer member of the DAV_CALLBACK_AUTH_UNP or DAV_CALLBACK_AUTH_BLOB structure points to, not the entire structure. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavFreeCredCallback",
    "is_callback": 1,
    "dll": "",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "PVOID",
        "name": "pbuffer",
        "description": "A pointer to the DAV_CALLBACK_AUTH_UNP or DAV_CALLBACK_AUTH_BLOB  structure that was used in the DavAuthCallback callback function."
      }
    ],
    "min_client": "Windows Vista with SP2 [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Retrieves the extended error code information that the WebDAV server returned for the previous failed I/O operation.",
    "library": "Netapi32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code, such as one of the following values.  ",
    "remarks": "If you call  this function for a file handle whose previous I/O  operation was successful, it returns ERROR_INVALID_PARAMETER. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavGetExtendedError",
    "is_callback": 0,
    "dll": "Netapi32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hFile",
        "description": "A handle to an open file for which the previous I/O operation has failed. If the previous operation is a failed create operation, in which case there is no open file handle, specify INVALID_HANDLE_VALUE for this parameter."
      },
      {
        "in_out": "_Out_",
        "type": "DWORD*",
        "name": "ExtError",
        "description": "Pointer to a variable that receives the extended error code."
      },
      {
        "in_out": "_Out_",
        "type": "LPWSTR",
        "name": "ExtErrorString",
        "description": "Pointer to a buffer  that receives the extended error information as a null-terminated Unicode string."
      },
      {
        "in_out": "_Inout_",
        "type": "DWORD*",
        "name": "cChSize",
        "description": "A pointer to a variable that on input specifies the size, in Unicode characters, of the buffer that the ExtErrorString parameter points to. This value must be at least 1024 characters.  If the function succeeds, on output the variable receives the number of characters that are actually copied into the buffer. If the function fails with ERROR_INSUFFICIENT_BUFFER, the variable receives 1024, but no characters are copied into the ExtErrorString buffer."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Converts the specified UNC path to an equivalent HTTP path.",
    "library": "Netapi32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code, such as the following value.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavGetHTTPFromUNCPath",
    "is_callback": 0,
    "dll": "Netapi32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPCWSTR",
        "name": "UncPath",
        "description": "A pointer to a null-terminated Unicode string that contains the UNC path. This path must be in the following format: \\\\server[@SSL][@port][\\path] where server is the server name. @SSL is optional and indicates a request for an SSL connection. port is an optional port number. The standard ports are 80 for http and 443 for https (SSL). path is optional and specifies a path to a remote file or directory on the server."
      },
      {
        "in_out": "_Out_",
        "type": "LPWSTR",
        "name": "HttpPath",
        "description": "A pointer to a caller-allocated buffer  that receives the HTTP path as a null-terminated Unicode string."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "lpSize",
        "description": "A pointer to a variable that on input specifies the maximum size, in Unicode characters, of the buffer that the HttpPath parameter points to. If the function succeeds, on output the variable receives the number of characters that were copied into the buffer. If the function fails with ERROR_INSUFFICIENT_BUFFER, on output the variable receives the number of characters needed to store the HTTP path, including the \"http://\" or \"https://\" prefix and the terminating NULL character."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Returns the file lock owner for a file that is locked on a WebDAV server.",
    "library": "Davclnt.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code, such as one of the following values.  ",
    "remarks": "If a call to a function such as CreateFile for a file on a WebDAV server fails with ERROR_LOCK_VIOLATION, you can use the DavGetTheLockOwnerOfTheFile function to determine the owner of the file lock. To obtain the required buffer length for the LockOwnerName buffer, call DavGetTheLockOwnerOfTheFile with LockOwnerName set to NULL and LockOwnerNameLengthInBytes set to zero. The return value is ERROR_INSUFFICIENT_BUFFER, and on output the LockOwnerNameLengthInBytes parameter receives the required buffer length. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavGetTheLockOwnerOfTheFile",
    "is_callback": 0,
    "dll": "Davclnt.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPCWSTR",
        "name": "FileName",
        "description": "A pointer to a null-terminated Unicode string that contains the name of a locked file on the WebDAV server. This string must be in one of the following formats:  \\\\server\\path\\filename drive:\\filename  where server is the name of a server, path is the path to a remote file on the server, filename is a valid file name, and drive is the drive letter that a remote share is mapped to on the local computer. (A share is a directory on a server that is made available to users over the network.)"
      },
      {
        "in_out": "_Out_opt_",
        "type": "PWSTR",
        "name": "LockOwnerName",
        "description": "A pointer to a caller-allocated buffer  that receives the name of the owner of the file lock. This parameter is optional and can be NULL. If it is NULL, the LockOwnerNameLengthInBytes parameter must point to zero on input."
      },
      {
        "in_out": "_Inout_",
        "type": "PULONG",
        "name": "LockOwnerNameLengthInBytes",
        "description": "A pointer to a variable that on input specifies the maximum size, in Unicode characters, of the buffer that the LockOwnerName parameter points to. If the function succeeds, on output the variable receives the number of characters that were copied into the buffer. If the function fails with ERROR_INSUFFICIENT_BUFFER, on output the variable receives the number of characters needed to store the lock owner name, including the terminating NULL character."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Converts the specified HTTP path to an equivalent UNC path.",
    "library": "Netapi32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code, such as the following value.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavGetUNCFromHTTPPath",
    "is_callback": 0,
    "dll": "Netapi32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPCWSTR",
        "name": "HttpPath",
        "description": "A pointer to a null-terminated Unicode string that contains the HTTP path. This string can be in any of the following formats, where server is the server name and path is the path to a remote file or directory on the server:  http://server/path http://server \\\\http://server/path \\\\http://server https://server/path https://server \\\\https://server/path \\\\https://server \\\\server\\path \\\\server"
      },
      {
        "in_out": "_Out_",
        "type": "LPWSTR",
        "name": "UncPath",
        "description": "A pointer to a caller-allocated buffer  that receives the UNC path as a null-terminated Unicode string."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "lpSize",
        "description": "A pointer to a variable that on input specifies the maximum size, in Unicode characters, of the buffer that the UncPath parameter points to. If the function succeeds, on output the variable receives the number of characters that were copied into the buffer, including the terminating NULL character. If the function fails with ERROR_INSUFFICIENT_BUFFER, on output the variable receives the number of characters needed to store the UNC path, including the terminating NULL character."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Invalidates the contents of the local cache for a remote file on a WebDAV server.",
    "library": "Davclnt.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return value is a system error code. ",
    "remarks": "The  DavInvalidateCache function marks the contents of the locally cached file (for the specified URL) for deletion. If this function succeeds, the local file cache is no longer valid. This function fails if there are any handles opened against the file either by the same process or by a different process on the local computer. If the item that is named in the URLName parameter is not present in the cache, DavInvalidateCache returns ERROR_SUCCESS without invalidating the cache. ",
    "return_type": "DWORD",
    "category": "WebDAV",
    "name": "DavInvalidateCache",
    "is_callback": 0,
    "dll": "Davclnt.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPWSTR",
        "name": "URLName",
        "description": "A pointer to a Unicode string that contains the name of a remote file on a WebDAV server. This name can be an HTTP path name (URL) or a UNC path name."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Registers an application-defined callback function that the WebDAV client can use to prompt the user for credentials.",
    "library": "Davclnt.lib",
    "min_server": "Windows Server 2008 with SP2 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "If the function succeeds, the return value is an opaque handle. Note that OPAQUE_HANDLE is defined to be a DWORD value. ",
    "remarks": "The WebDAV client uses the callback function when it is unable to connect to a remote resource using default credentials. To unregister the callback function, use the DavUnregisterAuthCallback function, passing the returned opaque handle in the hCallback  parameter. ",
    "return_type": "OPAQUE_HANDLE",
    "category": "WebDAV",
    "name": "DavRegisterAuthCallback",
    "is_callback": 0,
    "dll": "Davclnt.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "PFNDAVAUTHCALLBACK",
        "name": "CallBack",
        "description": "A pointer to a function of type PFNDAVAUTHCALLBACK."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "Version",
        "description": "This parameter is reserved for future use."
      }
    ],
    "min_client": "Windows Vista with SP2 [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Unregisters a registered callback function that the WebDAV client uses to prompt the user for credentials.",
    "library": "Davclnt.lib",
    "min_server": "Windows Server 2008 with SP2 [desktop apps only]",
    "header": "Davclnt.h",
    "return_value": "This function does not return a value. ",
    "remarks": "To register the callback function, use the DavRegisterAuthCallback function. ",
    "return_type": "VOID",
    "category": "WebDAV",
    "name": "DavUnregisterAuthCallback",
    "is_callback": 0,
    "dll": "Davclnt.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "OPAQUE_HANDLE",
        "name": "hCallback",
        "description": "The opaque handle that was returned by the DavRegisterAuthCallback function."
      }
    ],
    "min_client": "Windows Vista with SP2 [desktop apps only]"
  }
]