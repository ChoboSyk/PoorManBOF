[
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "void",
    "category": "GDI+",
    "name": "GdiplusShutdown",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "__in",
        "type": "ULONG_PTR",
        "name": "token",
        "description": "Type: ULONG_PTR Token returned by a previous call to GdiplusStartup."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 3,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "Status",
    "category": "GDI+",
    "name": "GdiplusStartup",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "__out",
        "type": "ULONG_PTR token*",
        "name": "token",
        "description": "Type: ULONG_PTR token* Pointer to a  \t\t\t\t\tULONG_PTR that receives a token. Pass the token to GdiplusShutdown when you have finished using GDI+."
      },
      {
        "in_out": "__in",
        "type": "const GdiplusStartupInput*",
        "name": "input",
        "description": "Type: const GdiplusStartupInput* Pointer to a GdiplusStartupInput structure that contains the GDI+ version, a pointer to a debug callback function, a Boolean value that specifies whether to suppress the background thread, and a Boolean value that specifies whether to suppress external image codecs."
      },
      {
        "in_out": "__out",
        "type": "GdiplusStartupOutput*",
        "name": "output",
        "description": "Type: GdiplusStartupOutput* Pointer to a GdiplusStartupOutput structure that receives a pointer to a notification hook function and a pointer to a notification unhook function. If the  \t\t\t\t\tSuppressBackgroundThread data member of the  \t\t\t\t\tinput parameter is FALSE, then this parameter can be NULL."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 3,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "Status",
    "category": "GDI+",
    "name": "GetImageDecoders",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "__in",
        "type": "UINT",
        "name": "numDecoders",
        "description": "Type: UINT Integer that specifies the number of available image decoders. Call GetImageDecodersSize to determine this number."
      },
      {
        "in_out": "__in",
        "type": "UINT",
        "name": "size",
        "description": "Type: UINT Integer that specifies the size, in bytes, of the array of  \t\t\t\t\tImageCodecInfo objects. Call GetImageDecodersSize to determine this number."
      },
      {
        "in_out": "__out",
        "type": "ImageCodecInfo*",
        "name": "decoders",
        "description": "Type: ImageCodecInfo* Pointer to a buffer that receives the array of  \t\t\t\t\tImageCodecInfo objects. You must allocate memory for this buffer. Call GetImageDecodersSize to determine the size of the required buffer."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 2,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "Status",
    "category": "GDI+",
    "name": "GetImageDecodersSize",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "__out",
        "type": "UINT*",
        "name": "numDecoders",
        "description": "Type: UINT* Pointer to a UINT that receives the number of available image decoders."
      },
      {
        "in_out": "__out",
        "type": "UINT*",
        "name": "size",
        "description": "Type: UINT* Pointer to a  \t\t\t\t\tUINT that receives the total size, in bytes, of the array of  \t\t\t\t\tImageCodecInfo objects that is returned by the GetImageDecoders function."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 3,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "Status",
    "category": "GDI+",
    "name": "GetImageEncoders",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "__in",
        "type": "UINT",
        "name": "numEncoders",
        "description": "Type: UINT Integer that specifies the number of available image encoders. Call GetImageEncodersSize to determine this number."
      },
      {
        "in_out": "__in",
        "type": "UINT",
        "name": "size",
        "description": "Type: UINT Integer that specifies the size, in bytes, of the array of  \t\t\t\t\tImageCodecInfo objects. Call GetImageEncodersSize to determine this number."
      },
      {
        "in_out": "__out",
        "type": "ImageCodecInfo*",
        "name": "encoders",
        "description": "Type: ImageCodecInfo* Pointer to a buffer that receives the array of  \t\t\t\t\tImageCodecInfo objects. You must allocate memory for this buffer. Call GetImageEncodersSize to determine the size of the required buffer."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 2,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "Status",
    "category": "GDI+",
    "name": "GetImageEncodersSize",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "__out",
        "type": "UINT*",
        "name": "numEncoders",
        "description": "Type: UINT* Pointer to a  \t\t\t\t\tUINT that receives the number of available image encoders."
      },
      {
        "in_out": "__out",
        "type": "UINT*",
        "name": "size",
        "description": "Type: UINT* Pointer to a  \t\t\t\t\tUINT that receives the total size, in bytes, of the array of  \t\t\t\t\tImageCodecInfo objects that is returned by GetImageEncoders."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "UINT",
    "category": "GDI+",
    "name": "GetPixelFormatSize",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "",
        "type": "PixelFormat",
        "name": "pixfmt",
        "description": "Type: PixelFormat A PixelFormat constant that specifies the pixel format to be tested."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "BOOL",
    "category": "GDI+",
    "name": "IsAlphaPixelFormat",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "",
        "type": "PixelFormat",
        "name": "pixfmt",
        "description": "Type: PixelFormat A PixelFormat constant that specifies the pixel format to be tested."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "BOOL",
    "category": "GDI+",
    "name": "IsCanonicalPixelFormat",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "",
        "type": "PixelFormat",
        "name": "pixfmt",
        "description": "Type: PixelFormat A PixelFormat constant that specifies the pixel format to be tested."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "BOOL",
    "category": "GDI+",
    "name": "IsExtendedPixelFormat",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "",
        "type": "PixelFormat",
        "name": "pixfmt",
        "description": "Type: PixelFormat A PixelFormat constant that specifies the pixel format to be tested."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "BOOL",
    "category": "GDI+",
    "name": "IsIndexedPixelFormat",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "",
        "type": "PixelFormat",
        "name": "pixfmt",
        "description": "Type: PixelFormat A PixelFormat constant that specifies the pixel format to be tested."
      }
    ],
    "min_client": ""
  },
  {
    "n_arguments": 1,
    "description": "Applies to: desktop apps only",
    "library": "",
    "min_server": "",
    "header": "",
    "return_value": "",
    "remarks": "",
    "return_type": "BOOL",
    "category": "GDI+",
    "name": "ObjectTypeIsValid",
    "is_callback": 0,
    "dll": "",
    "arguments": [
      {
        "in_out": "",
        "type": "ObjectType",
        "name": "type",
        "description": "Type: ObjectType Element of the ObjectType enumeration to be tested."
      }
    ],
    "min_client": ""
  }
]