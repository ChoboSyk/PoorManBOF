[
  {
    "n_arguments": 5,
    "description": "Sets or retrieves power information.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "Powerbase.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008, Windows Vista, Windows Server 2003 and Windows XP",
    "return_value": "If the function succeeds, the return value is STATUS_SUCCESS. If the function fails, the return value can be one the following status codes.  ",
    "remarks": "Changes made to the current system power policy using      CallNtPowerInformation are immediate, but they      are not persistent; that is, the changes are not stored as part of a power scheme. Any changes to system power      policy made with CallNtPowerInformation may be      overwritten by changes to a policy scheme made by the user in the Power Options control panel program, or by      subsequent calls to WritePwrScheme,      SetActivePwrScheme, or other power scheme      functions. For more information on using PowrProf.h, see Power      Schemes. ",
    "return_type": "NTSTATUS",
    "category": "Power Management",
    "name": "CallNtPowerInformation",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "POWER_INFORMATION_LEVEL",
        "name": "InformationLevel",
        "description": "The information level requested. This value indicates the specific power information to be set or        retrieved. This parameter must be one of the following        POWER_INFORMATION_LEVEL enumeration type values.  ValueMeaning  AdministratorPowerPolicy 9   This information level is not supported.                    LastSleepTime 15   The lpInBuffer parameter must be NULL; otherwise, the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a ULONGLONG that           specifies the interrupt-time count, in 100-nanosecond units, at the last system sleep time.   LastWakeTime 14   The lpInBuffer parameter must be NULL; otherwise, the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a ULONGLONG that           specifies the interrupt-time count, in 100-nanosecond units, at the last system wake time.   ProcessorInformation 11   The lpInBuffer parameter must be NULL; otherwise the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives one           PROCESSOR_POWER_INFORMATION           structure for each processor that is installed on the system. Use the GetSystemInfo function to retrieve the number of processors.   ProcessorPowerPolicyAc 18   This information level is not supported.                    ProcessorPowerPolicyCurrent 22   This information level is not supported.                    ProcessorPowerPolicyDc 19   This information level is not supported.                    SystemBatteryState 5   The lpInBuffer parameter must be NULL; otherwise, the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a           SYSTEM_BATTERY_STATE structure containing           information about the current system battery.   SystemExecutionState 16   The lpInBuffer parameter must be NULL; otherwise the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a ULONG value           containing the system execution state buffer. This value may contain any combination of the following values:           ES_SYSTEM_REQUIRED, ES_DISPLAY_REQUIRED, or           ES_USER_PRESENT. For more information, see the           SetThreadExecutionState function.   SystemPowerCapabilities 4   The lpInBuffer parameter must be NULL, otherwise, the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a           SYSTEM_POWER_CAPABILITIES structure           containing the current system power capabilities. This information represents the currently supported power capabilities. It may change as drivers are           installed in the system. For example, installation of legacy device drivers that do not support power           management disables all system sleep states.   SystemPowerInformation 12   The lpInBuffer parameter must be NULL; otherwise, the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a           SYSTEM_POWER_INFORMATION structure. Applications can use this level to retrieve information about the idleness of the system.   SystemPowerPolicyAc 0   If lpInBuffer is not NULL, the function applies the          SYSTEM_POWER_POLICY values passed in          lpInBuffer to the current system power policy used while the system is running on AC          (utility) power.          The lpOutputBuffer buffer receives a           SYSTEM_POWER_POLICY structure containing           the current system power policy used while the system is running on AC (utility) power.   SystemPowerPolicyCurrent 8   The lpInBuffer parameter must be NULL; otherwise, the          function returns ERROR_INVALID_PARAMETER.          The lpOutputBuffer buffer receives a           SYSTEM_POWER_POLICY structure           containing the current system power policy used while the system is running on AC (utility) power.   SystemPowerPolicyDc 1   If lpInBuffer is not NULL, the function applies the          SYSTEM_POWER_POLICY values          passed in lpInBuffer to the current system power policy used while the system is          running on battery power.          The lpOutputBuffer buffer receives a           SYSTEM_POWER_POLICY structure containing           the current system power policy used while the system is running on battery power.   SystemReserveHiberFile 10   If lpInBuffer is not NULL and the current user has          sufficient privileges, the function commits or decommits the storage required to hold the hibernation image on          the boot volume.          The lpInBuffer parameter must point to a BOOLEAN           value indicating the desired request. If the value is TRUE, the hibernation file is           reserved; if the value is FALSE, the hibernation file is removed.   VerifyProcessorPowerPolicyAc 20   This information level is not supported.                     VerifyProcessorPowerPolicyDc 21   This information level is not supported.                    VerifySystemPolicyAc 2   This information level is not supported.          \t\t\t\t\t\t\t   VerifySystemPolicyDc 3   This information level is not supported."
      },
      {
        "in_out": "_In_",
        "type": "PVOID",
        "name": "lpInputBuffer",
        "description": "A pointer to an optional input buffer. The data type of this buffer depends on the information level        requested in the InformationLevel parameter."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "nInputBufferSize",
        "description": "The size of the input buffer, in bytes."
      },
      {
        "in_out": "_Out_",
        "type": "PVOID",
        "name": "lpOutputBuffer",
        "description": "A pointer to an optional output buffer. The data type of this buffer depends on the information level        requested in the InformationLevel parameter. If the buffer is too small to contain the        information, the function returns STATUS_BUFFER_TOO_SMALL."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "nOutputBufferSize",
        "description": "The size of the output buffer, in bytes. Depending on the information level requested, this may be a        variably sized buffer."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "Frees all nodes in the device list and destroys the device list.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is         zero. For an example that uses this function, see       Using the Device Power API. ",
    "remarks": "",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "DevicePowerClose",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Enumerates devices on the system that meet the specified criteria.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. ",
    "remarks": "The values of the QueryFlags parameter may be combined to query for devices that       support two or more criteria. For example; if PDCAP_D3_SUPPORTED |       PDCAP_D1_SUPPORTED is passed as the QueryFlags parameter, the       function will query for devices that support either D3 or D1. QueryFlags also may be combined with       QueryInterpretationFlags set to DEVICEPOWER_AND_OPERATION to       produce a query of devices that support all of the requested criteria. For example; if       PDCAP_D3_SUPPORTED | PDCAP_D1_SUPPORTED is passed as the       QueryFlags parameter and DEVICEPOWER_AND_OPERATION is passed       as the QueryInterpretationFlags parameter, the function will query devices that support       both D3 and D1. For an example that uses this function, see       Using the Device Power API. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "DevicePowerEnumDevices",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "QueryIndex",
        "description": "The index of the requested device. For initial calls, this value should be zero."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "QueryInterpretationFlags",
        "description": "The criteria applied to the search results.  ValueMeaning  DEVICEPOWER_HARDWAREID 0x80000000   Return a hardware ID string rather than friendly device name.   DEVICEPOWER_FILTER_DEVICES_PRESENT 0x20000000   Ignore devices not currently present in the system.   DEVICEPOWER_AND_OPERATION 0x40000000   Perform an AND operation on QueryFlags.   DEVICEPOWER_FILTER_WAKEENABLED 0x08000000   Check whether the device is currently enabled to wake the system from a sleep state.   DEVICEPOWER_FILTER_ON_NAME 0x02000000   Find a device whose name matches the string passed in pReturnBuffer and check          its capabilities against QueryFlags."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "QueryFlags",
        "description": "The query criteria.  ValueMeaning  PDCAP_D0_SUPPORTED 0x00000001   The device supports system power state D0.   PDCAP_D1_SUPPORTED 0x00000002   The device supports system power state D1.   PDCAP_D2_SUPPORTED 0x00000004   The device supports system power state D2.   PDCAP_D3_SUPPORTED 0x00000008   The device supports system power state D3.   PDCAP_S0_SUPPORTED 0x00010000   The device supports system sleep state S0.   PDCAP_S1_SUPPORTED 0x00020000   The device supports system sleep state S1.   PDCAP_S2_SUPPORTED 0x00040000   The device supports system sleep state S2.   PDCAP_S3_SUPPORTED 0x00080000   The device supports system sleep state S3.   PDCAP_S4_SUPPORTED 0x01000000   The device supports system sleep state S4.   PDCAP_S5_SUPPORTED 0x02000000   The device supports system sleep state S5.   PDCAP_WAKE_FROM_D0_SUPPORTED 0x00000010   The device supports waking from system power state D0.   PDCAP_WAKE_FROM_D1_SUPPORTED 0x00000020   The device supports waking from system power state D1.   PDCAP_WAKE_FROM_D2_SUPPORTED 0x00000040   The device supports waking from system power state D2.   PDCAP_WAKE_FROM_D3_SUPPORTED 0x00000080   The device supports waking from system power state D3.   PDCAP_WAKE_FROM_S0_SUPPORTED 0x00100000   The device supports waking from system sleep state S0.   PDCAP_WAKE_FROM_S1_SUPPORTED 0x00200000   The device supports waking from system sleep state S1.   PDCAP_WAKE_FROM_S2_SUPPORTED 0x00400000   The device supports waking from system sleep state S2.   PDCAP_WAKE_FROM_S3_SUPPORTED 0x00800000   The device supports waking from system sleep state S3.   PDCAP_WARM_EJECT_SUPPORTED 0x00000100   The device supports warm eject."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PBYTE",
        "name": "pReturnBuffer",
        "description": "Pointer to a buffer that receives the requested information."
      },
      {
        "in_out": "_Inout_",
        "type": "PULONG",
        "name": "pBufferSize",
        "description": "The size, in bytes, of the return buffer.        Note  If pReturnBuffer is NULL,         pBufferSize will be filled with the size needed to return the data."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Initializes a device list by querying all the devices.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. For an example that uses this function, see Using the Device Power API. ",
    "remarks": "",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "DevicePowerOpen",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "",
        "type": "ULONG",
        "name": "Flags",
        "description": "Reserved; must be 0."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Modifies the specified data on the specified device.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  \t      GetLastError. For an example that uses this function, see  \t    Using the Device Power API. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "DevicePowerSetDeviceState",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPCWSTR",
        "name": "DeviceDescription",
        "description": "The name or hardware identifier string of the device to be modified."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "SetFlags",
        "description": "The properties of the device that are to be modified.  ValueMeaning  DEVICEPOWER_SET_WAKEENABLED 0x00000001   Enables the specified device to wake the system.   DEVICEPOWER_CLEAR_WAKEENABLED 0x00000002   Stops the specified device from being able to wake the system."
      },
      {
        "in_out": "_In_",
        "type": "PCVOID",
        "name": "SetData",
        "description": "Reserved, must be NULL."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Retrieves the current system power policy settings.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "To update the current power policy settings, call the  WriteGlobalPwrPolicy or  WritePwrScheme functions. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "GetCurrentPowerPolicies",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_Out_",
        "type": "PGLOBAL_POWER_POLICY",
        "name": "pGlobalPowerPolicy",
        "description": "A pointer to a  GLOBAL_POWER_POLICY structure that receives the current global power policy settings."
      },
      {
        "in_out": "_Out_",
        "type": "PPOWER_POLICY",
        "name": "pPowerPolicy",
        "description": "A pointer to a  POWER_POLICY structure that receives the power policy settings that are unique to the active power scheme."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Retrieves the current power state of the specified device. This function cannot be used to query the power state of a display device.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. ",
    "remarks": "An application can use  GetDevicePowerState to determine whether a device is in the working state or a low-power state. If the device is in a low-power state, accessing the device may cause it to either queue or fail any I/O requests, or transition the device into the working state. The exact behavior depends on the implementation of the device. To ensure maximum battery life on a laptop computer, use  GetDevicePowerState to reduce power consumption. For example, if a disk is currently powered down, accessing the disk will cause it to spin up, resulting in increased power consumption and reduced battery life. Applications should defer or limit access to devices wherever possible while the system is running on battery power. To determine whether the system is running on battery power, and the remaining battery life, use the  GetSystemPowerStatus function. ",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "GetDevicePowerState",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hDevice",
        "description": "A handle to an object on the device, such as a file or socket, or a handle to the device itself."
      },
      {
        "in_out": "_Out_",
        "type": "BOOL*",
        "name": "pfOn",
        "description": "A pointer to the variable that receives the  power state. This value is TRUE if the device is in the working state. Otherwise, it is FALSE."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Retrieves information about the system power capabilities.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "Powerbase.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008, Windows Vista, Windows Server 2003 and Windows XP",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "This function retrieves detailed information about the current system power management hardware resources and capabilities. This includes information about the presence of hardware features such as power buttons, lid switches, and batteries. Other details returned include information about current power management capabilities and configurations that can change dynamically, such as the minimum sleep state currently supported, which may change as new drivers are introduced into the system, or the presence of the system hibernation file. This information is also available through the  CallNtPowerInformation function, using the SystemPowerCapabilities level. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "GetPwrCapabilities",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_Out_",
        "type": "PSYSTEM_POWER_CAPABILITIES",
        "name": "lpSystemPowerCapabilities",
        "description": "A pointer to a  SYSTEM_POWER_CAPABILITIES structure that receives the information."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Retrieves the power status of the system. The status indicates whether the system is running on AC or DC power, whether the battery is currently charging, how much battery life remains, and if battery saver is on or off.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "To compile an application that uses this function, define the _WIN32_WINNT macro as 0x0400 or later. For more information, see  Using the Windows Headers. ",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "GetSystemPowerStatus",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_Out_",
        "type": "LPSYSTEM_POWER_STATUS",
        "name": "lpSystemPowerStatus",
        "description": "A pointer to a  SYSTEM_POWER_STATUS structure that receives status information."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "Determines the current state of the computer.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the system was restored to the working state automatically and the user is not active, the function returns TRUE. Otherwise, the function returns FALSE. ",
    "remarks": "The  PBT_APMRESUMEAUTOMATIC event is broadcast when the system wakes automatically to handle an event. The user is generally not present. If the system detects any user activity after broadcasting the  PBT_APMRESUMEAUTOMATIC event, it will broadcast the  PBT_APMRESUMESUSPEND event to let applications know they can resume full interaction with the user. ",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "IsSystemResumeAutomatic",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Determines if the current user has access to the data for the specified power scheme so that it could      be restored if necessary.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerCanRestoreIndividualDefaultPowerScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Decrements the count of power requests of the specified type for a power request object.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, it returns a nonzero value. If the function fails, it returns zero. To get extended error information, call  GetLastError. ",
    "remarks": "",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "PowerClearRequest",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "PowerRequest",
        "description": "A handle to a power request object."
      },
      {
        "in_out": "_In_",
        "type": "POWER_REQUEST_TYPE",
        "name": "RequestType",
        "description": "The power request type to be decremented. This parameter can be one of the following values.  ValueMeaning  PowerRequestDisplayRequired   The display remains on even if there is no user input for an extended period of time.   PowerRequestSystemRequired   The system continues to run instead of entering sleep after a period of user inactivity.   PowerRequestAwayModeRequired   The system enters away mode instead of sleep. In away mode, the system continues to run but turns off audio and video to give the appearance of sleep.   PowerRequestExecutionRequired   The calling process continues to run instead of being suspended or terminated by process lifetime management mechanisms. When and how long the process is allowed to run depends on the operating system and  power policy settings.  When a PowerRequestExecutionRequired request is active, it implies PowerRequestSystemRequired. The PowerRequestExecutionRequired request type can be used only by applications. Services cannot use this request type. Windows 7 and Windows Server 2008 R2:  This request type is supported starting with Windows 8 and Windows Server 2012."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Creates a possible setting value for a specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerCreatePossibleSetting",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootSystemPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being created."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index for the possible setting being created."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Creates a new power request object.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is a handle to the power request object. If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call  GetLastError. ",
    "remarks": "When the power request object is no longer needed, use the CloseHandle function to free the handle and clean up the object. ",
    "return_type": "HANDLE",
    "category": "Power Management",
    "name": "PowerCreateRequest",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "PREASON_CONTEXT",
        "name": "Context",
        "description": "Points to a REASON_CONTEXT structure that contains information about the power request."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Creates a setting value for a specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerCreateSetting",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootSystemPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being created."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Deletes the specified power scheme from the database.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerDeleteScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "Determines the computer role for Windows 7, Windows Server 2008 R2, Windows Vista or Windows Server 2008. To specify a different platform, use the PowerDeterminePlatformRoleEx function.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "The return value is one of the values from the        POWER_PLATFORM_ROLE enumeration. ",
    "remarks": "This function reads the ACPI Fixed ACPI Description Table (FADT) to determine the OEM preferred computer role. If that information is not available, the function looks for a battery. If at least one battery is available, the function returns PlatformRoleMobile. If no batteries are available, the function returns PlatformRoleDesktop. ",
    "return_type": "POWER_PLATFORM_ROLE",
    "category": "Power Management",
    "name": "PowerDeterminePlatformRole",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Duplicates an existing power scheme.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerDuplicateScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SourceSchemeGuid",
        "description": "The identifier of the power scheme that is to be duplicated."
      },
      {
        "in_out": "_In_",
        "type": "GUID**",
        "name": "DestinationSchemeGuid",
        "description": "The address of a pointer to a GUID. If the pointer contains        NULL, the function allocates memory for a new        GUID and puts the address of this memory in the pointer. The caller can free this        memory using LocalFree."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 7,
    "description": "Enumerates the specified elements in a power scheme. This function is normally called in a      loop incrementing the Index parameter to retrieve subkeys until they've all been      enumerated.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. If the buffer size passed in the BufferSize parameter is too small,        or if the Buffer parameter is NULL,        ERROR_MORE_DATA will be returned and the DWORD pointed to        by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerEnumerate",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme. If this parameter is NULL,        an enumeration of the power policies is returned."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings.  If this parameter is NULL, an        enumeration of settings under the PolicyGuid key is returned.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup will be part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "POWER_DATA_ACCESSOR",
        "name": "AccessFlags",
        "description": "A set of flags that specifies what will be enumerated  ValueMeaning  ACCESS_SCHEME 16   Enumerate power schemes. The SchemeGuid and          SubgroupOfPowerSettingsGuid parameters will be ignored.   ACCESS_SUBGROUP 17   Enumerate subgroups under SchemeGuid. The          SubgroupOfPowerSettingsGuid parameter will be ignored.   ACCESS_INDIVIDUAL_SETTING 18   Enumerate individual power settings under          SchemeGuid\\SubgroupOfPowerSettingsGuid. To enumerate power          settings directly under the SchemeGuid key, use          NO_SUBGROUP_GUID as the SubgroupOfPowerSettingsGuid          parameter."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "Index",
        "description": "The zero-based index of the scheme, subgroup, or setting that is being enumerated."
      },
      {
        "in_out": "_Out_opt_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "A pointer to a variable to receive the elements. If this parameter is NULL, the function retrieves the size of the buffer required."
      },
      {
        "in_out": "_Inout_",
        "type": "DWORD*",
        "name": "BufferSize",
        "description": "A pointer to a variable that on input contains the size of the buffer pointed to by        the Buffer parameter. If the  Buffer parameter is        NULL or if the BufferSize is not large enough, the function        will return ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Retrieves the active power scheme and returns a GUID that identifies the      scheme.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Powersetting.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008 and Windows Vista",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerGetActiveScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "UserRootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_Out_",
        "type": "GUID**",
        "name": "ActivePolicyGuid",
        "description": "A pointer that receives a pointer to a GUID structure.        Use the LocalFree function to free this memory."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Imports a power scheme from a file.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerImportPowerScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "LPCWSTR",
        "name": "ImportFileNamePath",
        "description": "The path to a power scheme backup file created by PowerCfg.Exe /Export."
      },
      {
        "in_out": "_Inout_",
        "type": "GUID**",
        "name": "DestinationSchemeGuid",
        "description": "A pointer to a pointer to a GUID. If the pointer contains        NULL, the function allocates memory for a new        GUID and puts the address of this memory in the pointer. The caller can free this        memory using LocalFree."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Queries whether the specified power setting represents a range of possible values.",
    "library": "Powrprof.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Powrprof.h",
    "return_value": "TRUE if the registry key specified by SubKeyGuid represents a single power setting. If the registry key specified by SubKeyGuid  represents a range, this function returns FALSE. ",
    "remarks": "",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "PowerIsSettingRangeDefined",
    "is_callback": 0,
    "dll": "Powrprof.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubKeyGuid",
        "description": "The identifier of the subkey to search."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SettingGuid",
        "description": "The identifier of the power setting to query."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Retrieves the default AC index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if         the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadACDefaultIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemePersonalityGuid",
        "description": "The identifier for the scheme personality for this power setting. A power setting can have different default        values depending on the power scheme personality."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use        NO_SUBGROUP_GUID to retrieve the setting for the default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier for the single power setting."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "AcDefaultIndex",
        "description": "A pointer to a variable that receives the default AC index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 7,
    "description": "Retrieves the AC power value for the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Powersetting.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008 and Windows Vista",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. If the buffer size specified by the BufferSize parameter is too small,        ERROR_MORE_DATA will be returned and the DWORD pointed to        by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadACValue",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use       NO_SUBGROUP_GUID to retrieve the setting for the default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PULONG",
        "name": "Type",
        "description": "A pointer to a variable that receives the type of data for the value. The       possible values are listed in Registry Value Types.       This parameter can be NULL and the type of data is not returned."
      },
      {
        "in_out": "_Out_opt_",
        "type": "LPBYTE",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the data value. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size."
      },
      {
        "in_out": "_Inout_opt_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Retrieves the AC index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadACValueIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "AcValueIndex",
        "description": "A pointer to a variable that receives the AC value index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Retrieves the default DC index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if       the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadDCDefaultIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemePersonalityGuid",
        "description": "The identifier of the scheme personality for this power setting. A power setting can have different default       values depending on the power scheme personality."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use       NO_SUBGROUP_GUID to retrieve the setting for the default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "DcDefaultIndex",
        "description": "A pointer to a variable that receives the default DC index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 7,
    "description": "Retrieves the DC power value for the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Powersetting.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008 and Windows Vista",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. If the buffer size specified by the BufferSize parameter is too small,        ERROR_MORE_DATA will be returned and the DWORD pointed to        by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadDCValue",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use       NO_SUBGROUP_GUID to retrieve the setting for the default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PULONG",
        "name": "Type",
        "description": "A pointer to a variable that receives the type of data for the value. The       possible values are listed in Registry Value Types.       This parameter can be NULL and the type of data is not returned."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a variable that receives the data value. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Retrieves the DC value index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadDCValueIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The identifier of the subgroup of power settings. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  These values are the subgroup values included with Windows.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "DcValueIndex",
        "description": "A pointer to a variable that receives the DC value index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Retrieves the description for the specified power setting, subgroup, or scheme. If the      SchemeGuid parameter is not NULL but both the      SubGroupOfPowerSettingsGuid and PowerSettingGuid parameters      are NULL, the description of the power scheme will be returned. If the      SchemeGuid and SubGroupOfPowerSettingsGuid parameters are not      NULLand  the PowerSettingGuid parameter is      NULL, the description of the subgroup will be returned. If the      SchemeGuid, SubGroupOfPowerSettingsGuid, and      PowerSettingGuid parameters are not NULL, the description of      the power setting will be returned.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t      the call failed. If the buffer size specified by the BufferSize parameter is too small,  \t      the function returns  \t      ERROR_SUCCESS and the DWORD pointed         to by the BufferSize parameter is filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadDescription",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the       default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the description. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size. The strings returned are all wide (Unicode) strings."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Retrieves the friendly name for the specified power setting, subgroup, or scheme. If the      SchemeGuid parameter is not NULL but both the      SubGroupOfPowerSettingsGuid and PowerSettingGuid parameters      are NULL, the friendly name of the power scheme will be returned. If the      SchemeGuid and SubGroupOfPowerSettingsGuid parameters are not      NULLand  the PowerSettingGuid parameter is      NULL, the friendly name of the subgroup will be returned. If the      SchemeGuid, SubGroupOfPowerSettingsGuid, and      PowerSettingGuid parameters are not NULL, the friendly name of      the power setting will be returned.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if          the call failed. If the buffer size specified by the BufferSize parameter is too small,          ERROR_MORE_DATA will be returned and the DWORD pointed          to by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadFriendlyName",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the friendly name. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size. The strings returned are all wide (Unicode) strings."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Retrieves the icon resource for the specified power setting, subgroup, or scheme. If the      SchemeGuid parameter is not NULL but both the      SubGroupOfPowerSettingsGuid and PowerSettingGuid parameters      are NULL, the friendly name of the power scheme will be returned. If the      SchemeGuid and SubGroupOfPowerSettingsGuid parameters are not      NULLand  the PowerSettingGuid parameter is      NULL, the friendly name of the subgroup will be returned. If the      SchemeGuid, SubGroupOfPowerSettingsGuid, and      PowerSettingGuid parameters are not NULL, the friendly name of      the power setting will be returned.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if         the call failed. If the buffer size specified by the BufferSize parameter is too small,         ERROR_MORE_DATA will be returned and the DWORD pointed         to by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadIconResourceSpecifier",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the  \t      default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the icon resource. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Retrieves the description for one of the possible choices of a power setting value.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. If the buffer size specified by the BufferSize parameter is too small,                ERROR_MORE_DATA will be returned and the DWORD pointed        to by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadPossibleDescription",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the          default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index for the possible setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the description. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size. The strings returned are all wide (Unicode) strings."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Retrieves the friendly name for one of the possible choices of a power setting value.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t     the call failed. If the buffer size specified by the BufferSize parameter is too small,  \t       \t     ERROR_MORE_DATA will be returned and the DWORD pointed  \t     to by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadPossibleFriendlyName",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index for the possible setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the friendly name. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size. The strings returned are all wide (Unicode) strings."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 7,
    "description": "Retrieves the value for a possible value of a power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. If the buffer size specified by the BufferSize parameter is too small,                ERROR_MORE_DATA will be returned and the DWORD pointed        to by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadPossibleValue",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to       NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PULONG",
        "name": "Type",
        "description": "A pointer to a variable that receives the type of data for the value. The       possible values are listed in Registry Value Types.       This parameter can be NULL and the type of data is not returned."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index of the possible setting."
      },
      {
        "in_out": "_Out_opt_",
        "type": "PUCHAR",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the value. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Returns the current attribute of the specified power setting. If the      SubGroupGuid parameter is NULL then the attribute for      PowerSettingGuid is returned. If the PowerSettingGuid      parameter is NULL then the attribute for SubGroupGuid is      returned. If both the SubGroupGuid and PowerSettingGuid      parameters are valid then the return value is the combination (bitwise OR) of the attributes of the subgroup and      the power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns the current power setting attributes of the specified power setting. The attribute is a combination       of the attributes of the power setting and the attributes of its subgroup.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadSettingAttributes",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SubGroupGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  These values are the subgroup values included with Windows.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Retrieves the increment for valid values between the power settings minimum and maximum. If the power setting is not defined with a range of possible values then this function will return an error.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if       the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadValueIncrement",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "ValueIncrement",
        "description": "A pointer to a variable that receives the increment for the specified power setting."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Retrieves the maximum value for the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if       the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadValueMax",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "ValueMaximum",
        "description": "A pointer to a variable that receives the maximum for the specified power        setting."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Retrieves the minimum value for the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t     the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadValueMin",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_Out_",
        "type": "LPDWORD",
        "name": "ValueMinimum",
        "description": "A pointer to a variable that receives the minimum value for the specified power        setting."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Reads the string used to describe the units of a power setting that supports a range of      values. For example \"minutes\" may be used to describe a timeout setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t\t     the call failed. If the buffer size specified by the BufferSize parameter is too small,  \t\t       \t\t     ERROR_MORE_DATA will be returned and the DWORD pointed  \t\t     to by the BufferSize parameter will be filled in with the required buffer size. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReadValueUnitsSpecifier",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_Out_opt_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "A pointer to a buffer that receives the string. If this parameter is NULL,       the BufferSize       parameter receives the required buffer size. The strings returned are all wide (Unicode) strings."
      },
      {
        "in_out": "_Inout_",
        "type": "LPDWORD",
        "name": "BufferSize",
        "description": "A pointer to a variable that contains the size of the buffer pointed to by the       Buffer parameter.  If the Buffer parameter is NULL, the function returns ERROR_SUCCESS and the variable receives the required buffer size.  If the specified buffer size is not large enough to hold the       requested data, the function returns  ERROR_MORE_DATA and the variable receives the required buffer size."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Registers to receive notification when the system is suspended or resumed.",
    "library": "Powrprof.lib",
    "min_server": "Windows Server 2012 [desktop apps only]",
    "header": "Powerbase.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerRegisterSuspendResumeNotification",
    "is_callback": 0,
    "dll": "Powrprof.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "Flags",
        "description": "This parameter must be DEVICE_NOTIFY_CALLBACK."
      },
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "Recipient",
        "description": "This parameter is a pointer to a DEVICE_NOTIFY_SUBSCRIBE_PARAMETERS structure. In this case, the callback function is DeviceNotifyCallbackRoutine. When the Callback function executes, the  Type parameter is set indicating the type of event that occurred. Possible values include PBT_APMSUSPEND, PBT_APMRESUMESUSPEND, and PBT_APMRESUMEAUTOMATIC - see  Power Management Events for more info. The Setting parameter is not used with suspend/resume notifications."
      },
      {
        "in_out": "_Out_",
        "type": "PHPOWERNOTIFY",
        "name": "RegistrationHandle",
        "description": "A handle to the registration. Use this handle to unregister for notifications."
      }
    ],
    "min_client": "Windows 8 [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Deletes the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t     the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerRemovePowerSetting",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingSubKeyGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting to be deleted."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "Replaces the default power schemes with the current user's power schemes. This allows an      administrator to change the default power schemes for the system. Replacing the default schemes enables users to      use the Restore Defaults option in the Control Panel      Power Options application to restore customized power scheme defaults instead of the      original Windows power scheme defaults.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "The caller must be a member of the local Administrators group. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerReplaceDefaultPowerSchemes",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "Replaces the power schemes for the system with default power schemes. All current       power schemes and settings are deleted and replaced with the default system power schemes.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "The caller must be a member of the local Administrators group. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerRestoreDefaultPowerSchemes",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Replaces a specific power scheme for the current user with one from the default user (stored in      HKEY_USERS\\.Default)",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t     the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerRestoreIndividualDefaultPowerScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Sets the active power scheme for the current user.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Powersetting.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008 and Windows Vista",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerSetActiveScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "UserRootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Increments the count of power requests of the specified type for a power request object.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, it returns a nonzero value. If the function fails, it returns zero. To get extended error information, call GetLastError. ",
    "remarks": "To conserve power and provide the best user experience, applications that use power requests should follow these best practices: ",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "PowerSetRequest",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "PowerRequest",
        "description": "A handle to a power request object."
      },
      {
        "in_out": "_In_",
        "type": "POWER_REQUEST_TYPE",
        "name": "RequestType",
        "description": "The power request type to be incremented. This parameter can be one of the following values.  PowerRequestDisplayRequired   The display remains on even if there is no user input for an extended period of time.  PowerRequestSystemRequired   The system continues to run instead of entering sleep after a period of user inactivity.                                                                    This request type is not honored on systems capable of connected standby. Applications should use PowerRequestExecutionRequired requests instead.  PowerRequestAwayModeRequired   The system enters away mode instead of sleep in response to explicit action by the user. In away mode, the system continues to run but turns off audio and video to give the appearance of sleep.  PowerRequestExecutionRequired   The calling process continues to run instead of being suspended or terminated by process lifetime management mechanisms. When and how long the process is allowed to run depends on the operating system and  power policy settings.                                   On systems not capable of connected standby, an active PowerRequestExecutionRequired request implies PowerRequestSystemRequired. Note  PowerRequestExecutionRequired is supported starting with Windows 8 and Windows Server 2012."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Queries for a group policy override for specified power settings.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerSettingAccessCheck",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "POWER_DATA_ACCESSOR",
        "name": "AccessFlags",
        "description": "The type of access to check for group policy overrides.  ValueMeaning  ACCESS_AC_POWER_SETTING_INDEX 0 (0x0)   Check for overrides on AC power settings.   ACCESS_DC_POWER_SETTING_INDEX 1 (0x1)   Check for overrides on DC power settings.   ACCESS_SCHEME 16 (0x10)   Check for restrictions on specific power schemes.   ACCESS_ACTIVE_SCHEME 19 (0x13)   Check for restrictions on active power schemes.   ACCESS_CREATE_SCHEME 20 (0x14)   Check for restrictions on creating or restoring power schemes."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerGuid",
        "description": "The identifier of the power setting."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Queries for a group policy override for specified power settings and specifies the requested access for the setting.",
    "library": "Powrprof.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Powrprof.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed.  ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerSettingAccessCheckEx",
    "is_callback": 0,
    "dll": "Powrprof.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "POWER_DATA_ACCESSOR",
        "name": "AccessFlags",
        "description": "The type of access to check for group policy overrides.  ValueMeaning  ACCESS_AC_POWER_SETTING_INDEX 0 (0x0)   Check for overrides on AC power settings.   ACCESS_DC_POWER_SETTING_INDEX 1 (0x1)   Check for overrides on DC power settings.   ACCESS_SCHEME 16 (0x10)   Check for restrictions on specific power schemes.   ACCESS_ACTIVE_SCHEME 19 (0x13)   Check for restrictions on active power schemes.   ACCESS_CREATE_SCHEME 20 (0x14)   Check for restrictions on creating or restoring power schemes."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "REGSAM",
        "name": "AccessType",
        "description": "The type of security access for the setting. For more information, see Registry Key Security and Access Rights. This parameter can be one of the following values.   ValueMeaning  KEY_READ   Combines the STANDARD_RIGHTS_READ, KEY_QUERY_VALUE, KEY_ENUMERATE_SUB_KEYS, and KEY_NOTIFY values.   KEY_WRITE   Combines the STANDARD_RIGHTS_WRITE, KEY_SET_VALUE, and KEY_CREATE_SUB_KEY access rights."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Registers to receive notification when a power setting changes.",
    "library": "Powrprof.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Powersetting.h;  Powrprof.h on Windows Server 2008 R2 and Windows 7",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if the call failed. ",
    "remarks": "Immediately after registration, the callback will be invoked with the current value of the power setting. If the registration occurs while the power setting is changing, you may receive multiple callbacks; the last callback is the most recent update. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerSettingRegisterNotification",
    "is_callback": 0,
    "dll": "Powrprof.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LPCGUID",
        "name": "SettingGuid",
        "description": "A GUID that represents the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "Flags",
        "description": "Information about the recipient of the notification. This parameter can be one of the following values:  ValueMeaning  DEVICE_NOTIFY_SERVICE_HANDLE   The Recipient parameter is a handle to a service.Use the CreateService or OpenService function to obtain this handle.   DEVICE_NOTIFY_CALLBACK   The Recipient parameter is a pointer to a callback function to call when the power setting changes."
      },
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "Recipient",
        "description": "A handle to the recipient of the notifications."
      },
      {
        "in_out": "_Out_",
        "type": "PHPOWERNOTIFY",
        "name": "RegistrationHandle",
        "description": "A handle to the registration. Use this handle to unregister for notifications."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Cancels a registration to receive notification when a power setting changes.",
    "library": "Powrprof.lib",
    "min_server": "Windows Server 2008 R2 [desktop apps only]",
    "header": "Powersetting.h;  Powrprof.h on Windows Server 2008 R2 and Windows 7",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerSettingUnregisterNotification",
    "is_callback": 0,
    "dll": "Powrprof.dll",
    "arguments": [
      {
        "in_out": "_Inout_",
        "type": "HPOWERNOTIFY",
        "name": "RegistrationHandle",
        "description": "A handle to a registration obtained by calling the PowerSettingRegisterNotification function."
      }
    ],
    "min_client": "Windows 7 [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Cancels a registration to receive notification when the system is suspended or resumed.",
    "library": "Powrprof.lib",
    "min_server": "Windows Server 2012 [desktop apps only]",
    "header": "Powerbase.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if the call failed. ",
    "remarks": "",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerUnregisterSuspendResumeNotification",
    "is_callback": 0,
    "dll": "Powrprof.dll",
    "arguments": [
      {
        "in_out": "_Inout_",
        "type": "HPOWERNOTIFY",
        "name": "RegistrationHandle",
        "description": "A handle to a registration obtained by calling the PowerRegisterSuspendResumeNotification function."
      }
    ],
    "min_client": "Windows 8 [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Sets the default AC index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteACDefaultIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootSystemPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemePersonalityGuid",
        "description": "The identifier of the scheme personality for this power setting. A power setting can have different default       values depending on the power scheme personality."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "DefaultAcIndex",
        "description": "The default AC index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Sets the AC value index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Powersetting.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008 and Windows Vista",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteACValueIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "AcValueIndex",
        "description": "The AC value index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Sets the default DC index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteDCDefaultIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootSystemPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemePersonalityGuid",
        "description": "The identifier of the scheme personality for this power setting. A power setting can have different default  \t     values depending on the power scheme personality."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "DefaultDcIndex",
        "description": "The default DC index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Sets the DC index of the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "Powersetting.h;  PowrProf.h on Windows Server 2008 R2, Windows 7, Windows Server 2008 and Windows Vista",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t      the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteDCValueIndex",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "DcValueIndex",
        "description": "The DC value index."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Sets the description for the specified power setting, subgroup, or scheme.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if         the call failed. ",
    "remarks": "If the      SchemeGuid parameter is not NULL but both the      SubGroupOfPowerSettingsGuid and PowerSettingGuid parameters      are NULL, the description of the power scheme will be set. If the      SchemeGuid and SubGroupOfPowerSettingsGuid parameters are not      NULLand  the PowerSettingGuid parameter is      NULL, the description of the subgroup will be set. If the      SchemeGuid, SubGroupOfPowerSettingsGuid, and      PowerSettingGuid parameters are not NULL, the description of      the power setting will be set. Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteDescription",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The description, in wide (Unicode) characters."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the buffer pointed to by the Buffer parameter."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Sets the friendly name for the specified power setting, subgroup, or scheme. If the      SchemeGuid parameter is not NULL but both the      SubGroupOfPowerSettingsGuid and PowerSettingGuid parameters      are NULL, the friendly name of the power scheme will be set. If the      SchemeGuid and SubGroupOfPowerSettingsGuid parameters are not      NULLand  the PowerSettingGuid parameter is      NULL, the friendly name of the subgroup will be set. If the      SchemeGuid, SubGroupOfPowerSettingsGuid, and      PowerSettingGuid parameters are not NULL, the friendly name of      the power setting will be set.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteFriendlyName",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The friendly name, in wide (Unicode) characters."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the friendly name specified by the Buffer parameter, including the terminating NULL character."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Sets the icon resource for the specified power setting, subgroup, or scheme.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "If the      SchemeGuid parameter is not NULL but both the      SubGroupOfPowerSettingsGuid and PowerSettingGuid parameters      are NULL, the friendly name of the power scheme will be set. If the      SchemeGuid and SubGroupOfPowerSettingsGuid parameters are not      NULLand  the PowerSettingGuid parameter is      NULL, the friendly name of the subgroup will be set. If the      SchemeGuid, SubGroupOfPowerSettingsGuid, and      PowerSettingGuid parameters are not NULL, the friendly name of      the power setting will be set. Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteIconResourceSpecifier",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SchemeGuid",
        "description": "The identifier of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The icon resource."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the buffer pointed to by the Buffer parameter."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Sets the description for one of the possible choices of a power setting value.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWritePossibleDescription",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting that is being used."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index for the possible setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The description, in wide (Unicode) characters."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the buffer pointed to by the Buffer parameter."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 6,
    "description": "Sets the friendly name for the specified possible setting of a power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWritePossibleFriendlyName",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index for the possible setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The friendly name, in wide (Unicode) characters."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the buffer pointed to by the Buffer parameter."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 7,
    "description": "Sets the value for a possible value of a power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if       the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWritePossibleValue",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "Type",
        "description": "The type of data for the value. The possible values are listed in        Registry Value Types."
      },
      {
        "in_out": "_In_",
        "type": "ULONG",
        "name": "PossibleSettingIndex",
        "description": "The zero-based index for the possible setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The value for the possible setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the buffer pointed to by the Buffer parameter."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Sets the power attributes of a power key. If the PowerSettingGuid parameter is      NULL then the attribute for SubGroupGuid is set, otherwise the attribute for      PowerSettingGuid is set.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if       the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteSettingAttributes",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "SubGroupGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "Attributes",
        "description": "The attributes to be associated with the specified power setting.  ValueMeaning  POWER_ATTRIBUTE_HIDE 1   Hide this power setting."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Sets the increment for valid values between the power settings minimum and maximum.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if  \t     the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteValueIncrement",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "ValueIncrement",
        "description": "The increment to be set."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Sets the maximum value for the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteValueMax",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "ValueMaximum",
        "description": "The maximum value to be set."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "Sets the minimum value for the specified power setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if         the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteValueMin",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the         default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "ValueMinimum",
        "description": "The minimum value to be set."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 5,
    "description": "Writes the string used to describe the units of a power setting that supports a range of      values. For example \"minutes\" may be used to describe a timeout setting.",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "Returns ERROR_SUCCESS (zero) if the call was successful, and a nonzero value if        the call failed. ",
    "remarks": "Changes to the settings for the active power scheme do not take effect until you call the         PowerSetActiveScheme function. ",
    "return_type": "DWORD",
    "category": "Power Management",
    "name": "PowerWriteValueUnitsSpecifier",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_opt_",
        "type": "HKEY",
        "name": "RootPowerKey",
        "description": "This parameter is reserved for future use and must be set to NULL."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "SubGroupOfPowerSettingsGuid",
        "description": "The subgroup of power settings. This parameter can be one of the following values defined in WinNT.h. Use NO_SUBGROUP_GUID to refer to the        default power scheme.  ValueMeaning  NO_SUBGROUP_GUID fea3413e-7e05-4911-9a71-700331f1c294   Settings in this subgroup are part of the default power scheme.   GUID_DISK_SUBGROUP 0012ee47-9041-4b5d-9b77-535fba8b1442   Settings in this subgroup control power management configuration of the system's hard disk drives.   GUID_SYSTEM_BUTTON_SUBGROUP 4f971e89-eebd-4455-a8de-9e59040e7347   Settings in this subgroup control configuration of the system power buttons.   GUID_PROCESSOR_SETTINGS_SUBGROUP 54533251-82be-4824-96c1-47b60b740d00   Settings in this subgroup control configuration of processor power management features.   GUID_VIDEO_SUBGROUP 7516b95f-f776-4464-8c53-06167f40cc99   Settings in this subgroup control configuration of the video power management features.   GUID_BATTERY_SUBGROUP e73a048d-bf27-4f12-9731-8b2076e8891f   Settings in this subgroup control battery alarm trip points and actions.   GUID_SLEEP_SUBGROUP 238C9FA8-0AAD-41ED-83F4-97BE242C8F20   Settings in this subgroup control system sleep settings.   GUID_PCIEXPRESS_SETTINGS_SUBGROUP 501a4d13-42af-4429-9fd1-a8218c268e20   Settings in this subgroup control PCI Express settings."
      },
      {
        "in_out": "_In_opt_",
        "type": "const GUID*",
        "name": "PowerSettingGuid",
        "description": "The identifier of the power setting."
      },
      {
        "in_out": "_In_",
        "type": "UCHAR*",
        "name": "Buffer",
        "description": "The units specifier, in wide (Unicode) characters."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "BufferSize",
        "description": "The size of the buffer pointed to by the Buffer parameter."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Registers the application to receive power setting notifications for the specific power setting event.",
    "library": "User32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "WinUser.h (include Windows.h)",
    "return_value": "Returns a notification handle for unregistering for power notifications. If the function fails, the return value is NULL. To get extended error information, call  GetLastError. ",
    "remarks": "",
    "return_type": "HPOWERNOTIFY",
    "category": "Power Management",
    "name": "RegisterPowerSettingNotification",
    "is_callback": 0,
    "dll": "User32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hRecipient",
        "description": "Handle indicating where the power setting notifications are to be sent. For interactive applications, the       Flags parameter should be zero, and the hRecipient parameter       should be a window handle. For services, the Flags parameter should be one, and the       hRecipient parameter should be a SERVICE_STATUS_HANDLE       as returned from       RegisterServiceCtrlHandlerEx."
      },
      {
        "in_out": "_In_",
        "type": "LPCGUID",
        "name": "PowerSettingGuid",
        "description": "The GUID of the power setting for which notifications are to be sent. For more information see Registering for Power        Events."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "Flags",
        "description": "ValueMeaning  DEVICE_NOTIFY_WINDOW_HANDLE 0   Notifications are sent using WM_POWERBROADCAST         messages with a wParam parameter of         PBT_POWERSETTINGCHANGE.   DEVICE_NOTIFY_SERVICE_HANDLE 1   Notifications are sent to the HandlerEx callback         function with a dwControl parameter of         SERVICE_CONTROL_POWEREVENT and a dwEventType of         PBT_POWERSETTINGCHANGE."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "Registers to receive notification when the system is suspended or resumed. Similar to PowerRegisterSuspendResumeNotification, but operates in user mode and can take a window handle.",
    "library": "User32.lib",
    "min_server": "Windows Server 2012 [desktop apps only]",
    "header": "Winuser.h",
    "return_value": "A handle to the registration. Use this handle to unregister for notifications. If the function fails, the return value is NULL. To get extended error information call  GetLastError. ",
    "remarks": "",
    "return_type": "HPOWERNOTIFY",
    "category": "Power Management",
    "name": "RegisterSuspendResumeNotification",
    "is_callback": 0,
    "dll": "User32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HANDLE",
        "name": "hRecipient",
        "description": "This parameter contains parameters for subscribing to a power notification or a window handle representing the subscribing process.  If Flags is DEVICE_NOTIFY_CALLBACK, hRecipient is interpreted as a pointer to a DEVICE_NOTIFY_SUBSCRIBE_PARAMETERS structure. In this case, the callback function is DeviceNotifyCallbackRoutine. When the Callback function executes, the  Type parameter is set indicating the type of event that occurred. Possible values include PBT_APMSUSPEND, PBT_APMRESUMESUSPEND, and PBT_APMRESUMEAUTOMATIC - see  Power Management Events for more info. The Setting parameter is not used with suspend/resume notifications. If Flags is DEVICE_NOTIFY_WINDOW_HANDLE, hRecipient is a handle to the window to deliver events to."
      },
      {
        "in_out": "_In_",
        "type": "DWORD",
        "name": "Flags",
        "description": "This parameter can be DEVICE_NOTIFY_WINDOW_HANDLE or DEVICE_NOTIFY_CALLBACK."
      }
    ],
    "min_client": "Windows 8 [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "Suspends the system by shutting power down. Depending on the Hibernate      parameter, the system either enters a suspend (sleep) state or hibernation (S4).",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call         GetLastError. ",
    "remarks": "The calling process must have the SE_SHUTDOWN_NAME privilege. To enable the      SE_SHUTDOWN_NAME privilege, use the      AdjustTokenPrivileges function. For more      information, see Changing Privileges in a      Token. An application may use SetSuspendState to      transition the system from the working state to the standby (sleep), or optionally, hibernate (S4) state. This      function is similar to the SetSystemPowerState      function. For more information on using PowrProf.h, see      Power Schemes. For information about events that can wake the system, see System Wake-up Events. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "SetSuspendState",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "BOOLEAN",
        "name": "Hibernate",
        "description": "If this parameter is TRUE, the system hibernates. If the parameter is        FALSE, the system is suspended."
      },
      {
        "in_out": "_In_",
        "type": "BOOLEAN",
        "name": "ForceCritical",
        "description": "This parameter has no effect."
      },
      {
        "in_out": "_In_",
        "type": "BOOLEAN",
        "name": "DisableWakeEvent",
        "description": "If this parameter is TRUE, the system disables all wake events. If the parameter        is FALSE, any system wake events remain enabled."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Enables an application to inform the system that it is in use, thereby preventing the system from entering sleep or turning off the display while the application is running.",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "Winbase.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is the previous thread execution state. If the function fails, the return value is NULL. ",
    "remarks": "The system automatically detects activities such as local keyboard or mouse input, server activity, and changing window focus. Activities that are not automatically detected include disk or CPU activity and video display. Calling  SetThreadExecutionState without ES_CONTINUOUS simply resets the idle timer; to keep the display or system in the working state, the thread must call  SetThreadExecutionState periodically. To run properly on a power-managed computer, applications such as fax servers, answering machines, backup agents, and network management applications must use both ES_SYSTEM_REQUIRED and ES_CONTINUOUS when they process events. Multimedia applications, such as video players and presentation applications, must use ES_DISPLAY_REQUIRED when they display video for long periods of time without user input. Applications such as word processors, spreadsheets, browsers, and games do not need to call  SetThreadExecutionState. The ES_AWAYMODE_REQUIRED value should be used only when absolutely necessary by media applications that require the system to perform background tasks such as recording television content or streaming media to other devices while the system appears to be sleeping. Applications that do not require critical background processing or that run on portable computers should not enable away mode because it prevents the system from conserving power by entering true sleep. To enable away mode, an application uses both ES_AWAYMODE_REQUIRED and ES_CONTINUOUS; to disable away mode, an application calls SetThreadExecutionState with ES_CONTINUOUS and clears ES_AWAYMODE_REQUIRED. When away mode is enabled, any operation that would put the computer to sleep puts it in away mode instead. The computer appears to be sleeping while the system continues to perform tasks that do not require user input.  Away mode does not affect the sleep idle timer; to prevent the system from entering sleep when the timer expires, an application must also set the ES_SYSTEM_REQUIRED value. The  SetThreadExecutionState function cannot be used to prevent the user from putting the computer to sleep. Applications should respect that the user expects a certain behavior when they close the lid on their laptop or press the power button. This function does not  stop the screen saver from executing. ",
    "return_type": "EXECUTION_STATE",
    "category": "Power Management",
    "name": "SetThreadExecutionState",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "EXECUTION_STATE",
        "name": "esFlags",
        "description": "The thread's execution requirements. This parameter can be one or more of the following values.  ValueMeaning  ES_AWAYMODE_REQUIRED 0x00000040   Enables away mode. This value must be specified with ES_CONTINUOUS. Away mode should be used only by media-recording and media-distribution applications that must perform critical background processing on desktop computers while the computer appears to be sleeping. See Remarks.   ES_CONTINUOUS 0x80000000   Informs the system that the state being set should remain in effect until the next call that uses ES_CONTINUOUS and one of the other state flags is cleared.   ES_DISPLAY_REQUIRED 0x00000002   Forces the display to be on by resetting the display idle timer.   ES_SYSTEM_REQUIRED 0x00000001   Forces the system to be in the working state by resetting the system idle timer.   ES_USER_PRESENT 0x00000004   This value is not supported. If ES_USER_PRESENT is combined with other esFlags values, the call will fail and  none of the specified states will be set."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Unregisters the power setting notification.",
    "library": "User32.lib",
    "min_server": "Windows Server 2008 [desktop apps only]",
    "header": "WinUser.h (include Windows.h)",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "UnregisterPowerSettingNotification",
    "is_callback": 0,
    "dll": "User32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "HPOWERNOTIFY",
        "name": "Handle",
        "description": "The handle returned from the RegisterPowerSettingNotification function."
      }
    ],
    "min_client": "Windows Vista [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "Cancels a registration to receive notification when the system is suspended or resumed. Similar to PowerUnregisterSuspendResumeNotification but operates in user mode.",
    "library": "User32.lib",
    "min_server": "Windows Server 2012 [desktop apps only]",
    "header": "Winuser.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "",
    "return_type": "BOOL WINUSERAPI",
    "category": "Power Management",
    "name": "UnregisterSuspendResumeNotification",
    "is_callback": 0,
    "dll": "User32.dll",
    "arguments": [
      {
        "in_out": "_Inout_",
        "type": "HPOWERNOTIFY",
        "name": "RegistrationHandle",
        "description": "A handle to a registration obtained by calling the RegisterSuspendResumeNotification function."
      }
    ],
    "min_client": "Windows 8 [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "[CanUserWritePwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerSettingAccessCheck instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the current user has sufficient privilege to write a power scheme, the function returns TRUE. If the function fails, the return value is zero. To get extended error information, call  GetLastError. Possible error values include the following.  ",
    "remarks": "This function is useful if your application is impersonating a user. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "CanUserWritePwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "[DeletePwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerDeleteScheme instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "Applications can call  DeletePwrScheme to permanently delete a power scheme. An attempt to delete the currently active power scheme fails with the last error set to ERROR_ACCESS_DENIED. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "DeletePwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "UINT",
        "name": "uiIndex",
        "description": "The index of the power scheme to be deleted."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "[EnumPwrSchemes is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerEnumerate instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "For each power scheme enumerated, the callback function is called with the following parameters: The sName and sDesc parameters are null-terminated Unicode strings. The pp parameter is a pointer to a  POWER_POLICY structure containing the power policy scheme. To continue until all power schemes have been enumerated, the callback function must return TRUE. To stop the enumeration, the callback function must return FALSE. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "EnumPwrSchemes",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "PWRSCHEMESENUMPROC",
        "name": "lpfnPwrSchemesEnumProc",
        "description": "A pointer to a callback function to be called for each power scheme enumerated. For more information, see Remarks."
      },
      {
        "in_out": "_In_",
        "type": "LPARAM",
        "name": "lParam",
        "description": "A user-defined value to be passed to the callback function."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "[GetActivePwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerGetActiveScheme instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "The active power scheme remains active until either the user sets a new power scheme using the Power Options control panel program, or an application calls the  SetActivePwrScheme function. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "GetActivePwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_Out_",
        "type": "PUINT",
        "name": "puiID",
        "description": "A pointer to a variable that receives the index of the active power scheme."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "[GetPwrDiskSpindownRange is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "Starting with Windows Vista, power management configuration of the system's hard disk drives is controlled through the GUID_DISK_SUBGROUP power settings subgroup. Use the PowerEnumerate function to enumerate individual settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "GetPwrDiskSpindownRange",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_Out_",
        "type": "PUINT",
        "name": "RangeMax",
        "description": "The maximum disk spindown time, in seconds."
      },
      {
        "in_out": "_Out_",
        "type": "PUINT",
        "name": "RangeMin",
        "description": "The minimum disk spindown time, in seconds."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "[IsPwrHibernateAllowed is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use GetPwrCapabilities instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the computer supports hibernation (power state S4) and the file Hiberfil.sys is present on the system, the function returns TRUE. Otherwise, the function returns FALSE. ",
    "remarks": "This information is also available through the  CallNtPowerInformation function. The value is returned in the SystemS4 member of the  SYSTEM_POWER_CAPABILITIES structure. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "IsPwrHibernateAllowed",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "[IsPwrShutdownAllowed is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the computer supports soft off (power state S5), the function returns TRUE. Otherwise, the function returns FALSE. ",
    "remarks": "This information is also available through the  CallNtPowerInformation function. The value is returned in the SystemS5 member of the  SYSTEM_POWER_CAPABILITIES structure. Starting with Windows Vista, computers must support the soft off power state. Therefore, this function is relevant only to Windows Server 2003 and earlier operating systems. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "IsPwrShutdownAllowed",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 0,
    "description": "[IsPwrSuspendAllowed is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use GetPwrCapabilities instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the computer supports the sleep states (S1, S2, and S3), the function returns TRUE. Otherwise, the function returns FALSE. ",
    "remarks": "This information is also available through the  CallNtPowerInformation function. Check the SystemS1, SystemS2, and SystemS3 members of the  SYSTEM_POWER_CAPABILITIES structure. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "IsPwrSuspendAllowed",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "[ReadGlobalPwrPolicy is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "The  GLOBAL_POWER_POLICY structure contains policy settings that are common to all power schemes. This structure contains both user and computer policy settings. Starting with Windows Vista, use the PowerEnumerate function to enumerate power settings for a specified scheme and the power read functions to retrieve individual settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "ReadGlobalPwrPolicy",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_Out_",
        "type": "PGLOBAL_POWER_POLICY",
        "name": "pGlobalPowerPolicy",
        "description": "A pointer to a  GLOBAL_POWER_POLICY structure that receives the information."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "[ReadProcessorPwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "The  MACHINE_PROCESSOR_POWER_POLICY structure contains processor power policy settings for use while the system is running on AC power or battery power. Starting with Windows Vista, power management configuration of the system's processor is controlled through the GUID_PROCESSOR_SETTINGS_SUBGROUP power settings subgroup. Use the PowerEnumerate function to enumerate individual settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "ReadProcessorPwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "UINT",
        "name": "uiID",
        "description": "The index of the power scheme to be read."
      },
      {
        "in_out": "_Out_",
        "type": "PMACHINE_PROCESSOR_POWER_POLICY",
        "name": "pMachineProcessorPowerPolicy",
        "description": "A pointer to a  MACHINE_PROCESSOR_POWER_POLICY structure that receives the processor power policy settings."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "[ReadPwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "If the power scheme specified does not exist, the function returns FALSE. To retrieve information about the power policy settings currently in use by the system, call the  GetActivePwrScheme function. To retrieve additional information about the current power policy settings, call the  CallNtPowerInformation function. Starting with Windows Vista, use the PowerEnumerate function to enumerate power settings for a specified scheme and the power read functions to retrieve individual settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "ReadPwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "UINT",
        "name": "uiID",
        "description": "The index of the power scheme to be read."
      },
      {
        "in_out": "_Out_",
        "type": "PPOWER_POLICY",
        "name": "pPowerPolicy",
        "description": "A pointer to a  POWER_POLICY structure that receives the power policy settings."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "[RequestWakeupLatency      is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in      subsequent versions.]",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "WinBase.h (include Windows.h)",
    "return_value": "The return value is nonzero. ",
    "remarks": "The system uses the wake-up latency requirement when choosing a sleeping state. The latency is not guaranteed      because wake-up time is determined by the hardware design of the particular computer. To cancel a latency request, call      RequestWakeupLatency with      LT_DONT_CARE. ",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "RequestWakeupLatency",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "LATENCY_TIME",
        "name": "latency",
        "description": "The latency requirement for the time is takes to wake the computer. This parameter can be one of the        following values.  ValueMeaning  LT_LOWEST_LATENCY 1   PowerSystemSleeping1 state (equivalent to ACPI state S0 and APM state Working).   LT_DONT_CARE 0   Any latency (default)."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 3,
    "description": "[SetActivePwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use  PowerSetActiveScheme instead.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "Use this function to make long-term changes to the system configuration. To temporarily keep the system running while an application is performing a task, use the SetThreadExecutionState function. If the power scheme specified by uiID does not exist, the function returns zero. If lpGlobalPowerPolicy is NULL, the function uses the current global power policy settings set by  WriteGlobalPwrPolicy. Otherwise, the settings in the specified structure replace the current global power policy settings. If lpPowerPolicy is NULL, the function uses the current power policy settings for the power scheme. Otherwise, the settings in the specified structure replace the current power policy settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "SetActivePwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "UINT",
        "name": "uiID",
        "description": "The index of the power scheme to be activated."
      },
      {
        "in_out": "_In_opt_",
        "type": "PGLOBAL_POWER_POLICY",
        "name": "lpGlobalPowerPolicy",
        "description": "A pointer to an optional  GLOBAL_POWER_POLICY structure, which provides global power policy settings to be merged with the power scheme when it becomes active."
      },
      {
        "in_out": "_In_opt_",
        "type": "PPOWER_POLICY",
        "name": "lpPowerPolicy",
        "description": "A pointer to an optional  POWER_POLICY structure, which provides power policy settings to be merged with the power scheme when it becomes active."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "[SetSystemPowerState is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use SetSuspendState instead.]",
    "library": "Kernel32.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "WinBase.h (include Windows.h)",
    "return_value": "If power has been suspended and subsequently restored, the return value is nonzero. If the system was not suspended, the return value is zero. To get extended error information, call         GetLastError. ",
    "remarks": "The calling process must have the SE_SHUTDOWN_NAME privilege. To enable the      SE_SHUTDOWN_NAME privilege, use the      AdjustTokenPrivileges function. For more      information, see Changing Privileges in a      Token. If any application or driver denies permission to suspend operation, the function broadcasts a      PBT_APMQUERYSUSPENDFAILED event to each      application and driver. If power is suspended, this function returns only after system operation is resumed and      related WM_POWERBROADCAST messages have been broadcast      to all applications and drivers. This function is similar to the SetSuspendState      function. To compile an application that uses this function, define the _WIN32_WINNT macro as 0x0400 or later. For more      information, see Using the Windows      Headers. ",
    "return_type": "BOOL",
    "category": "Power Management",
    "name": "SetSystemPowerState",
    "is_callback": 0,
    "dll": "Kernel32.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "BOOL",
        "name": "fSuspend",
        "description": "If this parameter is TRUE, the system is suspended. If the parameter is        FALSE, the system hibernates."
      },
      {
        "in_out": "_In_",
        "type": "BOOL",
        "name": "fForce",
        "description": "This parameter has no effect."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 1,
    "description": "[WriteGlobalPwrPolicy is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "The function replaces any existing global power policy settings. Each user has a separate global power scheme, which contains power policy settings that apply to all power schemes for that user. Starting with Windows Vista, use the PowerEnumerate function to enumerate power settings for a specified scheme and the power write functions to write individual settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "WriteGlobalPwrPolicy",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "PGLOBAL_POWER_POLICY",
        "name": "pGlobalPowerPolicy",
        "description": "A pointer to a  GLOBAL_POWER_POLICY structure that contains the power policy settings to be written."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 2,
    "description": "[WriteProcessorPwrScheme is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. See Remarks.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "This change does not affect the current system power policy. To apply this change to the current system power policy, call the  SetActivePwrScheme function, using the index of this power scheme. Starting with Windows Vista, power management configuration of the system's processor is controlled through the GUID_PROCESSOR_SETTINGS_SUBGROUP power settings subgroup. Use the PowerEnumerate function to enumerate individual settings. For more information on using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "WriteProcessorPwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "UINT",
        "name": "ID",
        "description": "The index of the power scheme to be written."
      },
      {
        "in_out": "_In_",
        "type": "PMACHINE_PROCESSOR_POWER_POLICY",
        "name": "pMachineProcessorPowerPolicy",
        "description": "A pointer to a  MACHINE_PROCESSOR_POWER_POLICY structure that contains the power policy settings to be written."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  },
  {
    "n_arguments": 4,
    "description": "[WritePwrScheme is no longer available for use as of Windows Vista. Instead, use the PowerEnumerate function to enumerate power settings for a specified scheme, and the power write functions to write individual settings.]",
    "library": "PowrProf.lib",
    "min_server": "Windows Server 2003 [desktop apps only]",
    "header": "PowrProf.h",
    "return_value": "If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call  GetLastError. ",
    "remarks": "This change does not affect the current system power policy. To apply this change to the current system power policy, call the  SetActivePwrScheme function with the index of this power scheme. Power policy schemes written using  WritePwrScheme are permanently stored in the system registry hives, and remain available for use in the Power Options control panel program, or by subsequent calls to the power scheme API. To permanently remove a power scheme from the system, call the  DeletePwrScheme function. For more information about using PowrProf.h, see Power Schemes. ",
    "return_type": "BOOLEAN",
    "category": "Power Management",
    "name": "WritePwrScheme",
    "is_callback": 0,
    "dll": "PowrProf.dll",
    "arguments": [
      {
        "in_out": "_In_",
        "type": "PUINT",
        "name": "puiID",
        "description": "The index of the power scheme to be written. If a power scheme with the same index already exists, it is replaced. Otherwise, a new power scheme is created."
      },
      {
        "in_out": "_In_",
        "type": "LPWSTR",
        "name": "lpszName",
        "description": "The name of the power scheme."
      },
      {
        "in_out": "_In_opt_",
        "type": "LPWSTR",
        "name": "lpszDescription",
        "description": "The description of the power scheme."
      },
      {
        "in_out": "_In_",
        "type": "PPOWER_POLICY",
        "name": "pPowerPolicy",
        "description": "A pointer to a  POWER_POLICY structure that contains the power policy settings to be written."
      }
    ],
    "min_client": "Windows XP [desktop apps only]"
  }
]